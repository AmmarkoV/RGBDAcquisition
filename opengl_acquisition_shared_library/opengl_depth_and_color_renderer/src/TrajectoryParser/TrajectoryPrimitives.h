/** @file TrajectoryPrimitives.h
* @brief A tool that scans for a string in a very fast and robust way
* @author Ammar Qammaz (AmmarkoV)
*/

#ifndef TRAJECTORYPRIMITIVES_H_INCLUDED
#define TRAJECTORYPRIMITIVES_H_INCLUDED


/** @brief Enumerator for the IDs of TrajectoryPrimitives so we can know what the result was*/
enum { 
 TRAJECTORYPRIMITIVES_EMPTY=0,
 TRAJECTORYPRIMITIVES_OBJ,
 TRAJECTORYPRIMITIVES_DEBUG,
 TRAJECTORYPRIMITIVES_TIMESTAMP,
 TRAJECTORYPRIMITIVES_AUTOREFRESH,
 TRAJECTORYPRIMITIVES_INTERPOLATE_TIME,
 TRAJECTORYPRIMITIVES_BACKGROUND,
 TRAJECTORYPRIMITIVES_OBJECTTYPE,
 TRAJECTORYPRIMITIVES_OBJECT,
 TRAJECTORYPRIMITIVES_COMPOSITEOBJECT,
 TRAJECTORYPRIMITIVES_ARROW,
 TRAJECTORYPRIMITIVES_POS,
 TRAJECTORYPRIMITIVES_EVENT,
 TRAJECTORYPRIMITIVES_PROJECTION_MATRIX,
 TRAJECTORYPRIMITIVES_EMULATE_PROJECTION_MATRIX,
 TRAJECTORYPRIMITIVES_MODELVIEW_MATRIX,
 TRAJECTORYPRIMITIVES_SCALE_WORLD,
 TRAJECTORYPRIMITIVES_OFFSET_ROTATIONS,
 TRAJECTORYPRIMITIVES_MAP_ROTATIONS,
 TRAJECTORYPRIMITIVES_,
 TRAJECTORYPRIMITIVES_END_OF_ITEMS
};



/** @brief Scan a string for one of the words of the TrajectoryPrimitives word set
* @ingroup stringParsing
* @param Input String , to be scanned
* @param Length of Input String
* @retval See above enumerator*/
 int scanFor_TrajectoryPrimitives(const char * str,unsigned int strLength); 

#endif
